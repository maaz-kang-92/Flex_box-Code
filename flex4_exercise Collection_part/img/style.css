/* colors - see style guide for docs. 
Clearly there is more you could place in variables, up to you if you want to use them. My answer does not go beyond colors to keep the code easier to read. */

:root {
    --color1: #007aab;
    --color2: #ff0000;
    --color3: #b4e8eb;
    --color4: #94d28d;
    --color5: #e9d8a6;
    --color6: #ee9800;
    --color7: #ca6702;
    --color8: #bb3e03;
    --color9: #ae2012;
    --color10: #9b2226;
}


/* generic site styles */

html {
    box-sizing: border-box;
    color:white;
}

/* uderstand later in detail InshaAllah.... */


body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: #6de290;
    padding: 0;
    margin: 0;
}


section {
    max-width: 1200px;
    margin: 0 auto; 
    /*understand the consept of auto*/
    padding: 0 1rem;
}

section h2 {
    font-size: 2.5rem;
    /*40px*/
}

section ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
}

/* To keep mobile screens from being stupid long, consider setting a max height on the images and hide the overflow. 
Spelled out the individual border styles so border-color could go elsewhere. Styling is the same for all borders except the color. */

figure {
    margin: 0 0 0.5rem 0;
    padding: 0;
    max-height: 400px;
    overflow: hidden;  /* do it later */
    position: relative;
    border-width: 7px;
    border-style: solid;
    border-radius: 5px;
}

/* strange open space at the bottom of the box which shows through the transparent overlay - this kills it */

figure img {
    margin-bottom: -4px;
    width: 100%;

    /* The CSS object-fit property is used to specify how an <img> or <video> 
       should be resized to fit its container. */
    object-fit: cover;
    object-position: 0 -150px;
}

figcaption {
    background-color: rgba(255, 255, 255, 0.557);
    font-size: 1.875rem;
    position: absolute;
    bottom: 0;
    width: 100%;
    height: 14%;
    margin: 0;
    padding-bottom: 1%;
}

/* make the a have a big clickable area with display: block - the link occupies its containing element, the figcaption */

figcaption a {
    display: block;
    padding: 1rem;
    text-decoration:none;
    color: var(--color1);
}

/* style is doing double duty, styling border color and hover color. Only one declaration usually applies though.  */

.color2,
.color2 a:hover {
    border-color: var(--color2);
    color: var(--color2);
}

.color3,
.color3 a:hover {
    border-color: var(--color3);
    color: var(--color3);
}

.color4,
.color4 a:hover {
    border-color: var(--color4);
    color: var(--color4);
}

.color6,
.color6 a:hover {
    border-color: var(--color6);
    color: var(--color6);
}

.color7,
.color7 a:hover {
    border-color: var(--color7);
    color: var(--color7);
}

.color8 {
    border-color: var(--color8);
}
.color8 a:hover {
    color: var(--color8);
}


/* turn on flexbox here - prior to this, elements stacked individually as blocks */
/* work with min-width 50px and max-width: 700px 
and it run all condition  */
/* for mobile*/
@media (min-width: 0px) and (max-width: 750px) {
    body {
        background-color:#00ff51;
    }
    section ul {
        display: flex;
        flex-flow: row wrap;
        justify-content: space-between; 
    }
     section li {
        flex-basis: 100%;
    }
    /* turn off object position, inherit object-fit: cover */

    figure img {
        object-position: 0;    /* it will show full pic.... */
    } 
    figcaption a{
        padding-bottom: 12%;
        
    }
}


/* for tablet */
@media (min-width: 750px) and (max-width: 1000px) {
    body {
        background-color:#0099ff;
    }
    section ul {
        display: flex;
        flex-flow: row wrap;
        justify-content: space-between; 
    }
     section li {
        flex-basis: 49%;
    }
    /* turn off object position, inherit object-fit: cover */

    figure img {
        object-position: 0;    /* it will show full pic.... */
    } 
    figcaption {
        padding-bottom: 28px;
        height:30px;
    }
}

   /* This is for Desktop layout! */
@media (min-width: 1000px) and (max-width: 2000px) {
    body {
        background-color:#ffa600;
    }
    section ul {
        display: flex;
        flex-flow: row wrap;
        justify-content: space-between; 
    }
     section li {
        flex-basis: 33%;
    }
    /* turn off object position, inherit object-fit: cover */

    figure img {
        object-position: 0;    /* it will show full pic.... */
    } 
    figcaption a {
        padding-top: 2%;
        height: 13%;
    }
}